# Rucio Server Configuration
rucio:
  # TODO: should have token secrets
  server:
    enabled: true
    replicas: 1
    image: "rucio/rucio-server:latest"
    loglevel: "DEBUG"
    #port: 80
    db_host: "rucio-release-postgresql"
    db_user: "rucio"
    db_password: "rucio"
    db_name: "rucio"
    host: "https://rucio-service"
    useSSL: true
    
    # These settings will be passed as environment variables to the startup script
    httpd_config:
      grid_site_enabled: "True"
      encoded_slashes: "True"
        
    # FTS Configuration
    fts_host: "https://fts3-public.cern.ch:8446"  # CERN FTS endpoint

    # X.509 Authentication
    #x509_cert: "/etc/grid-security/hostcert.pem"  # Host certificate
    #x509_key: "/etc/grid-security/hostkey.pem"    # Private key
    ca_path: "/etc/grid-security/certificates"    # Trusted CAs
    extraVolumes:
      - name: ca-certs
        mountPath: /etc/grid-security/certificates
        secret:
          secretName: rucio-ca-secret
    extraVolumeMounts:
      - name: ca-certs
        mountPath: /etc/grid-security/certificates
        readOnly: true
    service:
      type: ClusterIP
      port: 443
      targetPort: 443
      protocol: TCP
      name: https
# Rucio Client Configuration
client:
  # -- Set to true to deploy a Rucio client pod
  enabled: true
  replicas: 1
  image:
    # -- Specifies the container image for the Rucio client
    repository: "rucio/rucio-clients"
    tag: "latest"
    pullPolicy: IfNotPresent

  # -- Configuration for the client's rucio.cfg file
  config:
    # -- The authentication strategy to use
    auth_type: "x509"
    # -- The Rucio account to use for client operations
    account: "root"
    
  # -- Security settings for the client, including the user certificate
  security:
    # -- The name of the Kubernetes secret containing the user's X.509 cert and key
    # -- You must create this secret manually before deploying.
    # -- Example: kubectl create secret generic rucio-client-x509-secret --from-file=usercert.pem=/path/to/your/usercert.pem --from-file=userkey.pem=/path/to/your/userkey.pem
    userSecretName: "rucio-client-x509-secret"
  extraVolumes:
    - name: ca-certs
      secret:
        secretName: rucio-ca-secret
  extraVolumeMounts:
    - name: ca-certs
      mountPath: /etc/grid-security/certificates
      readOnly: true
  # -- A command to keep the container running so you can exec into it
  command: ["tail", "-f", "/dev/null"]

initJob:
  enabled: true
# Database Configuration (PostgreSQL)
postgresql:
  # --  Configuration of built-in postgresql database. If 'enabled: true', a postgresql instance will be deployed, otherwise, an external database must be provided in database.default value
  enabled: true
  auth:
    # -- The database username for authentication
    username: rucio
    # -- The password for the database user
    password: rucio
    # -- The name of the database to be created and used by Rucio
    database: rucio

  #image:
  #  repository: "postgres"
  #  tag: "14"
  persistence:
    enabled: true
  #  size: 5Gi

# Storage Elements (RSE) Configuration
bootstrap:
  rse:
    - name: "BOULBY_STORAGE"
      rse_type: DISK
      deterministic: True
      volatile: False
      # attributes needed: oidc_support = True, oidc_base_path = /
      protocols:
        - scheme: "davs"
          hostname: "xlzd-data.boulby.ac.uk" # issuer of the token: https://xlzd-iam.boulby.ac.uk/ -> add to idpsecrets.yaml
          port: 1094
          prefix: "/rucio"
          impl: "rucio.rse.protocols.webdav.Default"
          domains:
            - WAN
          extended_attributes:
            #space_token: "CERN_EOS"
            fts: "https://fts00.grid.hep.ph.ic.ac.uk:8446"  # CERN FTS

# X.509 Authentication for User Access
security:
  x509:
    enabled: true
    # user_cert_path: "~/.globus/usercert.pem"
    # user_key_path: "~/.globus/userkey.pem"
    ca_cert_path: "/etc/grid-security/certificates" # TODO: check if the folder is populated by the server, should come from outside the container

# Rucio Daemons (Optional)
# TODO: should have token secrets
daemons: 
  enabled: true
  image: "rucio/rucio-daemons:latest"


  conveyorTransferSubmitterCount: 1
  conveyorPollerCount: 1
  conveyorFinisherCount: 1
  conveyorReceiverCount: 1
  # conveyorStagerCount: 1
  # conveyorThrottlerCount: 1
  # conveyerPreparerCount: 1
  judgeEvaluatorCount: 1

  conveyorTransferSubmitter:
    activities: "'User Subscriptions'"
    sleepTime: 5
    archiveTimeout: ""
    resources:
      limits:
        memory: "4Gi"
        cpu: "3000m"
      requests:
        memory: "200Mi"
        cpu: "700m"

  conveyorPoller:
    activities: "'User Subscriptions'"
    sleepTime: 60
    olderThan: 600
    resources:
      limits:
        memory: "4Gi"
        cpu: "3000m"
      requests:
        memory: "200Mi"
        cpu: "700m"

  conveyorFinisher:
    activities: "'User Subscriptions'"
    sleepTime: 5
    resources:
      limits:
        memory: "4Gi"
        cpu: "3000m"
      requests:
        memory: "200Mi"
        cpu: "700m"


  judgeEvaluator:

    resources:
      limits:
        memory: "4Gi"
        cpu: "3000m"
      requests:
        memory: "1Gi"
        cpu: "700m"

# WebUI Configuration (Optional)
#webui:
#  enabled: false  # Set to true if WebUI is needed
#  image: "rucio/rucio-webui:latest"