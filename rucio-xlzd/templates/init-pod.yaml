{{- if .Values.initJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-rucio-init-job
  labels:
    app: rucio-init-job
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      restartPolicy: OnFailure
      
      initContainers:
        - name: wait-for-db
          image: postgres:14
          imagePullPolicy: IfNotPresent
          env:
            - name: PGPASSWORD
              value: "{{ .Values.postgresql.auth.password }}"
          command: ['sh', '-c']
          args:
            - |
              set -ex
              echo "Waiting for database to be ready..."
              until pg_isready -h "{{ .Values.rucio.server.db_host }}" -p 5432 -U "{{ .Values.postgresql.auth.username }}" -d "{{ .Values.postgresql.auth.database }}"; do
                echo "Database is not ready yet. Retrying in 5 seconds..."
                sleep 5
              done
              echo "âœ… Database is ready."

      containers:
        - name: db-init
          image: rucio/rucio-init:latest
          imagePullPolicy: Always
          env:
            - name: RUCIO_CFG_DATABASE_DEFAULT
              value: "postgresql+psycopg://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ .Values.rucio.server.db_host }}/{{ .Values.postgresql.auth.database }}"
            - name: RUCIO_CFG_BOOTSTRAP_ACCOUNT
              value: "root"
            - name: RUCIO_CFG_BOOTSTRAP_X509_IDENTITY
              value: "{{ required "rucio.root_identity_dn is required in values.yaml!" .Values.rucio.root_identity_dn }}"
            - name: RUCIO_CFG_BOOTSTRAP_X509_EMAIL
              value: "rucio-root@example.com"
            - name: RUCIO_PRINT_CFG
              value: "true"
{{- end }}