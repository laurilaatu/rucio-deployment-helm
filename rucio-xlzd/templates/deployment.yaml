apiVersion: apps/v1
kind: Deployment
metadata:
  name: rucio-server
spec:
  replicas: {{ .Values.rucio.server.replicas }}
  selector:
    matchLabels:
      app: rucio-server
  template:
    metadata:
      labels:
        app: rucio-server
    spec:
      volumes:
        - name: server-host-certs
          secret:
            secretName: rucio-server-certs
            defaultMode: 0400
        {{- with .Values.rucio.server.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

      containers:
        - name: rucio-server
          image: {{ .Values.rucio.server.image }}
          ports:
            # We are targeting the HTTPS port
            - containerPort: 443
          volumeMounts:
            - name: server-host-certs
              mountPath: /opt/rucio/certs/host
              readOnly: true
            {{- with .Values.rucio.server.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          # This comprehensive set of environment variables should allow the
          # internal startup script to generate the correct HTTPS/X.509 config.
          env:
            - name: RUCIO_USE_SSL
              value: {{ .Values.rucio.server.useSSL | quote }}
            - name: RUCIO_HTTPD_GRID_SITE_ENABLED
              value: {{ .Values.rucio.server.httpd_config.grid_site_enabled | quote }}
            - name: RUCIO_HTTPD_ENCODED_SLASHES
              value: {{ .Values.rucio.server.httpd_config.encoded_slashes | quote }}
            - name: RUCIO_HOST
              value: "{{ .Values.rucio.server.host }}"
            - name: RUCIO_CFG_DATABASE_DEFAULT
              value: "postgresql://{{ .Values.postgres.auth.username }}:{{ .Values.postgres.auth.password }}@{{ .Values.rucio.server.db_host }}/{{ .Values.postgres.auth.database }}"
            - name: X509_USER_CERT
              value: "/opt/rucio/certs/host/hostcert.pem"
            - name: X509_USER_KEY
              value: "/opt/rucio/certs/host/hostkey.pem"
            - name: X509_CERT_DIR
              value: "/etc/ca-certs"
---
# ===================================================================
#  Rucio Client Deployment
# ===================================================================
{{- if .Values.client.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rucio-client
spec:
  replicas: {{ .Values.client.replicas }}
  selector:
    matchLabels:
      app: rucio-client
  template:
    metadata:
      labels:
        app: rucio-client
    spec:
      volumes:
        # Volume for the rucio.cfg file from our ConfigMap
        - name: rucio-config-volume
          configMap:
            name: rucio-client-config
        # Volume for the user cert/key from the secret defined in values.yaml
        - name: user-cert-secret
          secret:
            secretName: {{ .Values.client.security.userSecretName }}
            defaultMode: 0400
        # This is the extraVolume for the CA certs, which is correct
        {{- with .Values.client.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

      containers:
        - name: rucio-client
          image: "{{ .Values.client.image.repository }}:{{ .Values.client.image.tag }}"
          imagePullPolicy: {{ .Values.client.image.pullPolicy | default "IfNotPresent" }}
          command: ["tail", "-f", "/dev/null"]
          volumeMounts:
            # Mount the rucio.cfg file
            - name: rucio-config-volume
              mountPath: /opt/rucio/etc/rucio.cfg
              subPath: rucio.cfg
            # Mount the user cert/key secret to the path defined in rucio.cfg
            - name: user-cert-secret
              mountPath: /opt/rucio/certs/user
              readOnly: true
            # This is the extraVolumeMount for the CA certs, which is correct
            {{- with .Values.client.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
{{- end }}