apiVersion: v1
kind: Secret
metadata:
  name: rucio-secrets
type: Opaque
data:
  db-password: {{ .Values.rucio.server.db_password | b64enc }}
---
# Secret for the CA certificate and its hash link
apiVersion: v1
kind: Secret
metadata:
  name: rucio-ca-secret
type: Opaque
data:
  # These keys ('ca.cert.pem', '953d6fb9.0') must match the filenames
  # your application expects to find inside the mounted volume.
  # The '.Files.Get' function reads the file from your chart directory.
  # The '| b64enc' part encodes it in base64, as required by Kubernetes.
  ca.cert.pem: {{ (.Files.Get "certificates/ca.cert.pem") | b64enc }}
  953d6fb9.0: {{ (.Files.Get "certificates/953d6fb9.0") | b64enc }}

---
# Secret for the Rucio Server's host certificate and key
apiVersion: v1
kind: Secret
metadata:
  name: rucio-server-certs
type: Opaque
data:
  hostcert.pem: {{ (.Files.Get "certificates/hostcert.pem") | b64enc }}
  hostkey.pem: {{ (.Files.Get "certificates/hostkey.pem") | b64enc }}
  ca.pem: {{ (.Files.Get "certificates/ca.cert.pem") | b64enc }}


---
# Secret for the Rucio Client's x509 certificate and key
# Note: Your describe output didn't show this as missing,
# but your history shows you created it. It's good practice
# to manage it here as well.
apiVersion: v1
kind: Secret
metadata:
  name: rucio-client-x509-secret
type: Opaque
data:
  usercert.pem: {{ (.Files.Get "certificates/usercert.pem") | b64enc }}
  userkey.pem: {{ (.Files.Get "certificates/userkey.pem") | b64enc }}

  # TODO: OIDC sercrets in chart

